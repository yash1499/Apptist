type Instructor @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  imageUrl: String!
  email: String!
  newStudentEnrollments: Int 
  overallCoursesRating: Float 
  revenueThisMonth: Int 
  publishedCourses: [Course] @hasMany
}

type Student @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  imageUrl: String!
  email: String!
  courses: [Course] @manyToMany(relationName: "StudentCourse")
  reviewsProvided: [Reviews] @hasMany
}

type Course @model @auth(rules: [{allow: public}]) {
  id: ID!
  imageUrl: String!
  coverVideoUrl: String!
  title: String!
  description: String!
  amount: Int 
  sales: Int 
  instructor: Instructor @belongsTo
  sections: [CourseSection!] @hasMany
  students: [Student] @manyToMany(relationName: "StudentCourse")
  reviews: [Reviews] @hasMany
}

type CourseSection @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  lessons: [Lesson!] @hasMany
}

type Lesson @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  videoUrl: String!
  description: String 
}

type Reviews @model @auth(rules: [{allow: public}]) {
  id: ID!
  review: String!
  rating: Float 
  user: Student @belongsTo
}

type Tags @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
}
 